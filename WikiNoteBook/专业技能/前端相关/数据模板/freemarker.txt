Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-01-09T18:49:47+08:00

====== freemarker ======
Created Monday 09 January 2017

===== 1、数据的格式化 =====
如果遇到数据需要格式化的时候。
freemarker数字格式化可以在两个地方设置，一个是全局的，即在freemarker.properties文件中设置number_format，还有一个是使用string指令来控制数据的输出格式。例如：
**${num?string('0.00')}**
**如果小数点后不足两位，用 0 代替**
**${num?string('#.##')}**
**如果小数点后多余两位，就只保留两位，否则输出实际值**
**输出为：1239765.46**
**${num?string(',###.00')}**
**输出为：1,239,765.46**
**整数部分每三位用 , 分割，并且保证小数点后保留两位，不足用 0 代替**
**${num?string(',###.##')}**
**输出为：1,239,765.46**
**整数部分每三位用 , 分割，并且小数点后多余两位就只保留两位，不足两位就取实际位数，可以不包含小数点**
**${num?string('000.00')}**
**输出为：012.70**
**整数部分如果不足三位（000），前面用0补齐，否则取实际的整数位**
**${num?string('###.00')}**
**等价于**
**${num?string('#.00')}**
**输出为：12.70**
**整数取实际的位数**
关于string指令的更多用法，可以访问官方文档：http://freemarker.sourceforge.net/docs/ref_builtins_number.html#ref_builtin_string_for_number

===== 2、循环遍历数字 =====
**<#list 1..max as i>    **
**  <li><a href="#">${i}</a></li>**
**</#list>**
上面的代码可以使用Freemarker循环遍历数字，适用于我们需要取到下标的地方。

但是这个的话有一个非常大的问题，那就是实际上我们的只要在遍历的变量上这样做即可：
''promotionDetailVo_index即可取到下标''
